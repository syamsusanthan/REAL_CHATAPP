{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/chatroom/chatroom.component.ts","webpack:///src/app/chatroom/chatroom.component.html","webpack:///src/app/get.service.ts","webpack:///src/app/home/chat/chat.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/sign/sign.component.ts","webpack:///src/app/sign/sign.component.html","webpack:///src/app/useredit/useredit.component.ts","webpack:///src/app/useredit/useredit.component.html","webpack:///src/app/verify.guard.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","get","router","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ChatroomComponent","modalService","chatService","messageArray","storageArray","getdata","subscribe","data","allData","JSON","parse","stringify","userList","uList","roomsList","rList","roomUserList","chatUserList","signUserList","signList","userId","localStorage","getItem","roomId","currentUser","filter","p","phone","roomUser","selectedRoom","blockList","block","mutedUsers","mute","roomAdmin","room","currentPhone","currentName","name","getMessage","mutedUser","selectedPhone","user","push","reverse","setTimeout","getStorage","storeIndex","findIndex","storage","mContainer","nativeElement","scrollTop","scrollHeight","clear","navigate","selectedUser","find","phoneId","setItem","selectedroom","join","username","joinRoom","alert","deleteRoom","blockedSender","console","log","messageText","sendRoomMessage","toUser","message","userName","chats","updateStorage","setStorage","GetService","http","server_address","post","providedIn","ChatService","url","socket","transports","emit","observer","on","next","blockedno","window","location","reload","disconnect","HomeComponent","deleteUser","sendRoom","senderId","msg1","sendMessage","create","LoginComponent","fb","password","logForm","group","required","pattern","item","msg","token","login","SignComponent","selectedFile","repassword","signupForm","check","event","target","files","fd","FormData","append","sign","verify","UsereditComponent","selectedName","blockedUser","muteUser","Room","length","checkdata","blockvalue","mutevalue","checkvalue","select","deselect","selectedphone","mutedata","unmute","blockdata","unblock","VerifyGuard","getToken","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,eAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,YAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,8BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,UAAMC,MAAM,GAAW,CACrB;AAACC,YAAI,EAAC,EAAN;AAASC,iBAAS,EAAC;AAAnB,OADqB,EAErB;AAACD,YAAI,EAAC,MAAN;AAAaE,mBAAW,EAAC,CAAC,yDAAD,CAAzB;AAAuCD,iBAAS,EAAC;AAAjD,OAFqB,EAGrB;AAACD,YAAI,EAAC,QAAN;AAAeC,iBAAS,EAAC;AAAzB,OAHqB,EAIrB;AAACD,YAAI,EAAC,UAAN;AAAiBE,mBAAW,EAAC,CAAC,yDAAD,CAA7B;AAA2CD,iBAAS,EAAC;AAArD,OAJqB,EAKrB;AAACD,YAAI,EAAC,MAAN;AAAaE,mBAAW,EAAC,CAAC,yDAAD,CAAzB;AAAuCD,iBAAS,EAAC;AAAjD,OALqB,CAAvB;;UAYaE,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAHlB,CAAC,6DAAaC,OAAb,CAAqBL,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;4HAAhBI,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEXA,gB,EAAgB;gBAJ5B,sDAI4B;iBAJnB;AACRE,mBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBL,MAArB,CAAD,CADD;AAERF,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAImB,U;;;;;;;;;;;;;;;;;;ACrB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaS,Y;AAIX,8BAAmBC,GAAnB,EAA0CC,MAA1C,EAAyD;AAAA;;AAAtC,eAAAD,GAAA,GAAAA,GAAA;AAAuB,eAAAC,MAAA,GAAAA,MAAA;AAAiB;;;;iBAE3D,oBAAQ,CAAY;;;;;;;yBANTF,Y,EAAY,wH,EAAA,uH;AAAA,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA;AAAA;ACZzB;;;;;;;;;wEDYaA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACTG,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,sBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;;;;;;;AEZzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAoCaC,S;;;;;cAAAA,S;AAAS,oBAFR,2DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBAHT,E;AAAE,kBARJ,CACP,uEADO,EAEP,qEAFO,EAGP,0DAHO,EAIP,oEAJO,EAKP,oEALO,EAMP,kEANO,CAQI;;;;4HAGFA,S,EAAS;AAAA,yBAnBlB,2DAmBkB,EAlBlB,kEAkBkB,EAjBlB,kEAiBkB,EAhBlB,qEAgBkB,EAflB,+EAekB,EAdlB,+EAckB;AAdD,oBAIjB,uEAJiB,EAKjB,qEALiB,EAMjB,0DANiB,EAOjB,oEAPiB,EAQjB,oEARiB,EASjB,kEATiB;AAcC,S;AALC,O;;;;;wEAKVA,S,EAAS;gBArBrB,sDAqBqB;iBArBZ;AACRC,wBAAY,EAAE,CACZ,2DADY,EAEZ,kEAFY,EAGZ,kEAHY,EAIZ,qEAJY,EAKZ,+EALY,EAMZ,+EANY,CADN;AAURR,mBAAO,EAAE,CACP,uEADO,EAEP,qEAFO,EAGP,0DAHO,EAIP,oEAJO,EAKP,oEALO,EAMP,kEANO,CAVD;AAkBRS,qBAAS,EAAE,EAlBH;AAmBRC,qBAAS,EAAE,CAAC,2DAAD;AAnBH,W;AAqBY,U;;;;;;;;;;;;;;;;;;ACpCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACEE;;AAA+B;AAAA;;AAAA;;AAAA;AAAA;;AAAkL;;AAAM;;;;;;;;AAc5M;;AACG;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACH;;AAEA;;AAA6C;;AAAc;;AAC7D;;AACN;;;;;;;;AAJ8B;;AAAA;;AAEuB;;AAAA;;;;;;AALrD;;AACG;;AAOH;;;;;;;;AARuB;;AACf;;AAAA;;;;;;AAuBA;;AAA6G;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAD/G;;AACE;;AACF;;;;;;;;AADK;;AAAA;;;;;;AAUH;;AAAgI;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAChI;;AAAgI;;AAAG;;;;;;AACnI;;AAA8F;;AAAK;;;;;;AAEnG;;AAA+C;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAPnD;;AACA;;AACE;;AACE;;AACA;;AACA;;AACF;;AACE;;AAAqE;;AACvE;;AACF;;;;;;;;AATuC;;AAGkE;;AAAA;;AACA;;AAAA;;AAClD;;AAAA;;AAEhD;;AAAA;;;;;;;;AAnBX;;AACE;;AACE;;AAAkI;;AAAuB;;AACzJ;;AACE;;AAGF;;AACF;;AAGA;;AACE;;AAWF;;AAEA;;AAEE;;AACE;;AACE;;AACE;;AAGO;AAAA;;AAAA;;AAAA;AAAA,aAAyB,OAAzB,EAAyB;AAAA;;AAAA;;AAAA,sCACG,EADH,IACS,OAAJ,YAAI,EADT;AACK,WAD9B;;AAHP;;AAMF;;AACF;;AAEA;;AACE;;AACQ;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAChC;;AACF;;AACF;;AAEF;;AACF;;;;;;AA3CyC;;AAAA;;AAQhC;;AAAA;;AAqBQ;;AAAA;;;;UDtDZC,iB;AA8BX,mCACUC,YADV,EAEUC,WAFV,EAGSX,GAHT,EAISC,MAJT,EAIsB;AAAA;;AAHZ,eAAAS,YAAA,GAAAA,YAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACD,eAAAX,GAAA,GAAAA,GAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AA7BF,eAAAW,YAAA,GAAoE,EAApE;AACC,eAAAC,YAAA,GAAe,EAAf;AA8BP;;;;iBAED,oBAAQ;AAAA;;AACJ,iBAAKb,GAAL,CAASc,OAAT,GAAmBC,SAAnB,CAA6B,UAACC,IAAD,EAAQ;AACrC,mBAAI,CAACC,OAAL,GAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAAX,CAAb;AACA,mBAAI,CAACK,QAAL,GAAc,KAAI,CAACJ,OAAL,CAAaK,KAA3B;AACA,mBAAI,CAACC,SAAL,GAAe,KAAI,CAACN,OAAL,CAAaO,KAA5B;AACA,mBAAI,CAACC,YAAL,GAAkB,KAAI,CAACR,OAAL,CAAaS,YAA/B;AACA,mBAAI,CAACC,YAAL,GAAkB,KAAI,CAACV,OAAL,CAAaW,QAA/B;AACA,mBAAI,CAACC,MAAL,GAAYC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAZ;AACA,mBAAI,CAACC,MAAL,GAAYF,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAZ;AACA,mBAAI,CAACE,WAAL,GAAiB,KAAI,CAACZ,QAAL,CAAca,MAAd,CAAqB,UAACC,CAAD;AAAA,uBAAUA,CAAC,CAACC,KAAF,KAAU,KAAI,CAACP,MAAzB;AAAA,eAArB,CAAjB;AACA,mBAAI,CAACR,QAAL,GAAc,KAAI,CAACA,QAAL,CAAca,MAAd,CAAqB,UAACC,CAAD;AAAA,uBAAUA,CAAC,CAACC,KAAF,KAAU,KAAI,CAACP,MAAzB;AAAA,eAArB,CAAd;AACA,mBAAI,CAACQ,QAAL,GAAc,KAAI,CAACZ,YAAL,CAAkBS,MAAlB,CAAyB,UAACC,CAAD;AAAA,uBAAUA,CAAC,CAACG,YAAF,KAAiB,KAAI,CAACN,MAAhC;AAAA,eAAzB,CAAd;AACA,mBAAI,CAACO,SAAL,GAAe,KAAI,CAACF,QAAL,CAAcH,MAAd,CAAqB,UAACC,CAAD;AAAA,uBAAUA,CAAC,CAACK,KAAF,KAAU,IAApB;AAAA,eAArB,CAAf;AACA,mBAAI,CAACC,UAAL,GAAgB,KAAI,CAACJ,QAAL,CAAcH,MAAd,CAAqB,UAACC,CAAD;AAAA,uBAAUA,CAAC,CAACO,IAAF,KAAS,IAAnB;AAAA,eAArB,CAAhB;AACA,mBAAI,CAACC,SAAL,GAAe,KAAI,CAACpB,SAAL,CAAeW,MAAf,CAAsB,UAACC,CAAD;AAAA,uBAAUA,CAAC,CAACS,IAAF,KAAS,KAAI,CAACZ,MAAxB;AAAA,eAAtB,CAAf;AACA,mBAAI,CAACa,YAAL,GAAkB,KAAI,CAACZ,WAAL,CAAiB,CAAjB,EAAoBG,KAAtC;AACA,mBAAI,CAACU,WAAL,GAAiB,KAAI,CAACb,WAAL,CAAiB,CAAjB,EAAoBc,IAArC;AACD,aAhBC;AAiBD,iBAAKpC,WAAL,CAAiBqC,UAAjB,GACEjC,SADF,CACY,UAACC,IAAD,EAA6D;AACtE,mBAAI,CAACiC,SAAL,GAAe,KAAI,CAACR,UAAL,CAAgBP,MAAhB,CAAuB,UAACC,CAAD;AAAA,uBAAUA,CAAC,CAACe,aAAF,KAAkBlC,IAAI,CAACmC,IAAjC;AAAA,eAAvB,CAAf;;AACA,kBAAG,KAAI,CAACd,QAAL,IAAe,EAAf,IAAmB,KAAI,CAACR,MAAL,IAAab,IAAI,CAACmC,IAAxC,EAA6C;AAC3C,qBAAI,CAACvC,YAAL,CAAkBwC,IAAlB,CAAuBpC,IAAvB;;AACA,qBAAI,CAACJ,YAAL,CAAkByC,OAAlB;AACD;;AAED,kBAAI,KAAI,CAACxB,MAAT,EAAiB;AACfyB,0BAAU,CAAC,YAAM;AACf,uBAAI,CAACzC,YAAL,GAAoB,KAAI,CAACF,WAAL,CAAiB4C,UAAjB,EAApB;;AACA,sBAAMC,UAAU,GAAG,KAAI,CAAC3C,YAAL,CAChB4C,SADgB,CACN,UAACC,OAAD;AAAA,2BAAaA,OAAO,CAACtB,KAAR,KAAkB,KAAI,CAACP,MAApC;AAAA,mBADM,CAAnB,CAFe,CAIf;;AACD,iBALS,EAKP,GALO,CAAV;AAMD;AACF,aAhBF;AAiBF;;;iBACH,2BAAe;AACb,iBAAK8B,UAAL,CAAgBC,aAAhB,CAA8BC,SAA9B,GACA,KAAKF,UAAL,CAAgBC,aAAhB,CAA8BE,YAD9B;AAED;;;iBACC,kBAAM;AACJhC,wBAAY,CAACiC,KAAb;AACA,iBAAK9D,MAAL,CAAY+D,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACA;;;iBAEF,2BAAkB5B,KAAlB,EAA+B;AAAA;;AAC7B,iBAAK6B,YAAL,GAAoB,KAAK5C,QAAL,CAAc6C,IAAd,CAAmB,UAAAf,IAAI;AAAA,qBAAIA,IAAI,CAACf,KAAL,KAAeA,KAAnB;AAAA,aAAvB,CAApB;AACA,iBAAK+B,OAAL,GAAe,KAAKF,YAAL,CAAkB7B,KAAjC;AACAN,wBAAY,CAACsC,OAAb,CAAqB,cAArB,EAAoC,KAAKH,YAAL,CAAkBlB,IAAtD;AACAjB,wBAAY,CAACsC,OAAb,CAAqB,eAArB,EAAqC,KAAKH,YAAL,CAAkB7B,KAAvD;AACA,iBAAKiC,YAAL,GAAkB,KAAK5C,YAAL,CAAkByC,IAAlB,CAAuB,UAAAf,IAAI;AAAA,qBAAIA,IAAI,CAACD,aAAL,KAAuB,MAAI,CAACiB,OAAhC;AAAA,aAA3B,CAAlB;;AACA,gBAAG,KAAKxB,SAAL,CAAe,CAAf,EAAkBd,MAAlB,IAA0B,KAAKA,MAAlC,EAAyC;AACvC,mBAAK5B,MAAL,CAAY+D,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;;AACD,iBAAKM,IAAL,CAAU,KAAKrC,WAAf,EAA4B,KAAKJ,MAAjC;AACD;;;iBAED,cAAK0C,QAAL,EAAuB1C,MAAvB,EAAqC;AACnC,iBAAKlB,WAAL,CAAiB6D,QAAjB,CAA0B;AAACrB,kBAAI,EAAEoB,QAAP;AAAiB1C,oBAAM,EAAEA;AAAzB,aAA1B;AACD;;;iBAED,sBAAU;AACR4C,iBAAK,CAAC,uCAAD,CAAL;AACA,iBAAK9D,WAAL,CAAiB+D,UAAjB,CAA4B;AAAC1C,oBAAM,EAAC,KAAKA;AAAb,aAA5B;AACA,iBAAK/B,MAAL,CAAY+D,QAAZ,CAAqB,CAAC,MAAD,CAArB;AACD;;;iBAID,uBAAW;AAAA;;AACT,iBAAKW,aAAL,GAAmB,KAAKpC,SAAL,CAAe2B,IAAf,CAAoB,UAAAf,IAAI;AAAA,qBAAIA,IAAI,CAACD,aAAL,KAAuB,MAAI,CAACrB,MAAhC;AAAA,aAAxB,CAAnB;;AACA,gBAAG,KAAK8C,aAAR,EAAsB;AAACC,qBAAO,CAACC,GAAR,CAAY,IAAZ;AACrBJ,mBAAK,CAAC,0BAAD,CAAL;AACA,mBAAKK,WAAL,GAAiB,EAAjB;AACD,aAHD,MAII;AACF,mBAAKnE,WAAL,CAAiBoE,eAAjB,CAAiC;AAC/B5B,oBAAI,EAAE,KAAKtB,MADoB;AAE/BmD,sBAAM,EAAC,KAAKb,OAFmB;AAG/Bc,uBAAO,EAAE,KAAKH,WAHiB;AAI/BI,wBAAQ,EAAC,KAAKpC;AAJiB,eAAjC;AAMA,mBAAKgC,WAAL,GAAiB,EAAjB;AACD;;AAGD,iBAAKjE,YAAL,GAAoB,KAAKF,WAAL,CAAiB4C,UAAjB,EAApB;AACA,gBAAMC,UAAU,GAAG,KAAK3C,YAAL,CAChB4C,SADgB,CACN,UAACC,OAAD;AAAA,qBAAaA,OAAO,CAACtB,KAAR,KAAkB,MAAI,CAACP,MAApC;AAAA,aADM,CAAnB;;AAGA,gBAAI2B,UAAU,GAAG,CAAC,CAAlB,EAAqB;AACnB,mBAAK3C,YAAL,CAAkB2C,UAAlB,EAA8B2B,KAA9B,CAAoC/B,IAApC,CAAyC;AACvCD,oBAAI,EAAE,KAAKlB,WAD4B;AAEvCgD,uBAAO,EAAE,KAAKH;AAFyB,eAAzC;AAID,aALD,MAKO;AACL,kBAAMM,aAAa,GAAG;AACpBpD,sBAAM,EAAE,KAAKH,MADO;AAEpBsD,qBAAK,EAAE,CAAC;AACNhC,sBAAI,EAAE,KAAKlB,WADL;AAENgD,yBAAO,EAAE,KAAKH;AAFR,iBAAD;AAFa,eAAtB;AAQA,mBAAKjE,YAAL,CAAkBuC,IAAlB,CAAuBgC,aAAvB;AACD;;AACD,iBAAKzE,WAAL,CAAiB0E,UAAjB,CAA4B,KAAKxE,YAAjC;AACA,iBAAKiE,WAAL,GAAmB,EAAnB;AAED;;;;;;;yBAnJUrE,iB,EAAiB,oI,EAAA,oI,EAAA,wH,EAAA,uH;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA;AAAA;;;;;;;;;;;;;;;ACbhC;;AACE;;AAA2J;;AAAkB;;AAC7K;;AACF;;AACA;;AAEI;;AAEE;;AAEE;;AACE;;AACE;;AAAoE;;AAAe;;AACrF;;AAAM;;AAAI;;AAEV;;AASF;;AACF;;AACA;;AACE;;AACA;;AAAgF;;AAAW;;AAAM;;AAA8H;;AAAU;;AAC3O;;AAAQ;AAAA,qBAAS,IAAAiE,UAAA,EAAT;AAAqB,aAArB;;AAAyN;;AAAU;;AAC3O;;AAAM;;AAGJ;;AACE;;AAgDF;;AAEF;;AAEF;;AAEF;;;;AAtFQ;;AAAA;;AAUsE;;AAAA;;AAGa;;AAAA;;AAa0I;;AAAA;;AAM/M;;AAAA;;;;;;;;;wEDrBTjE,iB,EAAiB;gBAP/B,uDAO+B;iBAPrB;AACTP,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAOqB,U;;;;;;;;;;;AACGuD,oBAAU;kBAAxC,uDAAwC;mBAA9B,kB;AAA8B;;;;;;;;;;;;;;;;;;;AEd7C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMa2B,U;AAEX,4BAAmBC,IAAnB,EAAoC;AAAA;;AAAjB,eAAAA,IAAA,GAAAA,IAAA;AADnB,eAAAC,cAAA,GAAsB,KAAtB;AACuC;;;;iBACvC,cAAKxE,IAAL,EAAa;AACX,mBAAO,KAAKuE,IAAL,CAAUE,IAAV,WAAuB,KAAKD,cAA5B,WAAiDxE,IAAjD,CAAP;AACD;;;iBACD,aAAIA,IAAJ,EAAY;AACV,mBAAO,KAAKuE,IAAL,CAAUE,IAAV,WAAuB,KAAKD,cAA5B,WAAiDxE,IAAjD,CAAP;AACD;;;iBACD,mBAAO;AACL,mBAAO,KAAKuE,IAAL,CAAUvF,GAAV,WAAiB,KAAKwF,cAAtB,UAAP;AACD;;;iBACD,kBAASxE,IAAT,EAAiB;AACf,mBAAO,KAAKuE,IAAL,CAAUE,IAAV,WAAuB,KAAKD,cAA5B,YAAkDxE,IAAlD,CAAP;AACD;;;iBAED,oBAAQ;AACN,mBAAO,CAAC,CAACc,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAT;AACD;;;;;;;yBAlBUuD,U,EAAU,uH;AAAA,O;;;eAAVA,U;AAAU,iBAAVA,UAAU,K;AAAA,oBAFT;;;;;wEAEDA,U,EAAU;gBAHtB,wDAGsB;iBAHX;AACVI,sBAAU,EAAE;AADF,W;AAGW,U;;;;;;;;;;;;;;;;;;;;;;ACNvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;UAOaC,W;AAMX,+BAAc;AAAA;;AAJhB,eAAAH,cAAA,GAAsB,KAAtB;AAEU,eAAAI,GAAA,aAAS,KAAKJ,cAAd,EAEM,CAF0B;;AAGtC,eAAKK,MAAL,GAAc,4DAAG,KAAKD,GAAR,EAAa;AAACE,sBAAU,EAAE,CAAC,WAAD,EAAc,SAAd,EAAyB,aAAzB;AAAb,WAAb,CAAd;AACD;;;;iBAED,kBAAS9E,IAAT,EAAa;AACX,iBAAK6E,MAAL,CAAYE,IAAZ,CAAiB,MAAjB,EAAyB/E,IAAzB;AACD;;;iBAED,qBAAYA,IAAZ,EAAgB;AACd,iBAAK6E,MAAL,CAAYE,IAAZ,CAAiB,SAAjB,EAA4B/E,IAA5B;AACD;;;iBACD,yBAAgBA,IAAhB,EAAoB;AAClB,iBAAK6E,MAAL,CAAYE,IAAZ,CAAiB,cAAjB,EAAiC/E,IAAjC;AACD;;;iBACD,gBAAOA,IAAP,EAAW;AACT,iBAAK6E,MAAL,CAAYE,IAAZ,CAAiB,WAAjB,EAA8B/E,IAA9B;AACD;;;iBACD,kBAASA,IAAT,EAAa;AACX,iBAAK6E,MAAL,CAAYE,IAAZ,CAAiB,aAAjB,EAAgC/E,IAAhC;AACD;;;iBACD,eAAMA,IAAN,EAAU;AACR,iBAAK6E,MAAL,CAAYE,IAAZ,CAAiB,OAAjB,EAAyB/E,IAAzB;AACD;;;iBACD,iBAAQA,IAAR,EAAY;AACV,iBAAK6E,MAAL,CAAYE,IAAZ,CAAiB,SAAjB,EAA2B/E,IAA3B;AACD;;;iBACD,cAAKA,IAAL,EAAS;AACP,iBAAK6E,MAAL,CAAYE,IAAZ,CAAiB,MAAjB,EAAwB/E,IAAxB;AACD;;;iBACD,gBAAOA,IAAP,EAAW;AAAE4D,mBAAO,CAACC,GAAR,CAAY7D,IAAZ;AACX,iBAAK6E,MAAL,CAAYE,IAAZ,CAAiB,QAAjB,EAA0B/E,IAA1B;AACD;;;iBACD,oBAAWA,IAAX,EAAe;AACb,iBAAK6E,MAAL,CAAYE,IAAZ,CAAiB,YAAjB,EAA8B/E,IAA9B;AACD;;;iBACD,oBAAWA,IAAX,EAAe;AACb,iBAAK6E,MAAL,CAAYE,IAAZ,CAAiB,YAAjB,EAA8B/E,IAA9B;AACD;;;iBAGD,sBAAU;AAAA;;AACR,iBAAKa,MAAL,GAAYC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAZ;AACA,mBAAO,IAAI,+CAAJ,CAA6E,UAAAiE,QAAQ,EAAI;AAC9F,oBAAI,CAACH,MAAL,CAAYI,EAAZ,CAAe,aAAf,EAA8B,UAACjF,IAAD,EAAU;AACtCgF,wBAAQ,CAACE,IAAT,CAAclF,IAAd;AACD,eAFD;;AAGA,oBAAI,CAAC6E,MAAL,CAAYI,EAAZ,CAAe,kBAAf,EAAmC,UAACjF,IAAD,EAAU;AAC3CgF,wBAAQ,CAACE,IAAT,CAAclF,IAAd;AACD,eAFD;;AAGA,oBAAI,CAAC6E,MAAL,CAAYI,EAAZ,CAAe,SAAf,EAA0B,UAACjF,IAAD,EAAU;AAClCgF,wBAAQ,CAACE,IAAT,CAAclF,IAAd;;AACA,oBAAGA,IAAI,CAACmF,SAAL,IAAgB,MAAI,CAACtE,MAAxB,EAA+B;AAC7BuE,wBAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF,eALD;;AAOA,qBAAO,YAAM;AACX,sBAAI,CAACT,MAAL,CAAYU,UAAZ;AACD,eAFD;AAGD,aAjBM,CAAP;AAkBD;;;iBAED,sBAAa;AACX,gBAAM7C,OAAO,GAAW5B,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;AACA,mBAAO2B,OAAO,GAAGxC,IAAI,CAACC,KAAL,CAAWuC,OAAX,CAAH,GAAyB,EAAvC;AACD;;;iBAED,oBAAW1C,IAAX,EAAiB;AACfc,wBAAY,CAACsC,OAAb,CAAqB,OAArB,EAA8BlD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAA9B;AACD;;;;;;;yBA3EU2E,W;AAAW,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;wEAEDA,W,EAAW;gBAHvB,wDAGuB;iBAHZ;AACVD,sBAAU,EAAE;AADF,W;AAGY,U;;;;;;;;;;;;;;;;;;;;ACPxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEE;;AAA+B;AAAA;;AAAA;;AAAA;AAAA;;AAAkL;;AAAM;;;;;;;;AAc/M;;AACG;;AACG;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEH;;AAA6C;;AAAc;;AAC7D;;AACN;;AACA;;;;;;;;AAPuB;;AAI8B;;AAAA;;;;;;;;AAyBjD;;AAAuI;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgI;;AAAe;;AAAI;;;;;;AAAnB;;AAAA;;;;;;AAY1Q;;AACE;;AAA6B;;AAAiB;;AAChD;;;;;;;;AAFuC;;AACR;;AAAA;;;;;;;;AARnC;;AACE;;AAEE;;AAA6C;;AAAsB;;AACrE;;AAEA;;AACE;;AAGF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAAqE;AAAA;;AAAA;;AAAA;AAAA,aAAyB,OAAzB,EAAyB;AAAA;;AAAA;;AAAA,sCAA6B,EAA7B,IAAmC,OAAJ,YAAI,EAAnC;AAA+B,WAAxD;;AAArE;;AACF;;AACF;;AAEA;;AACE;;AACQ;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAChC;;AACF;;AACF;;AAEF;;AACF;;;;;;AAzBiD;;AAAA;;AAIxC;;AAAA;;AASsE;;AAAA;;;;UDtD5Ec,a;AAkBX,+BACU9F,YADV,EAEUC,WAFV,EAGSX,GAHT,EAISC,MAJT,EAIsB;AAAA;;AAHZ,eAAAS,YAAA,GAAAA,YAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACD,eAAAX,GAAA,GAAAA,GAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AAjBF,eAAAW,YAAA,GAAoD,EAApD;AACC,eAAAC,YAAA,GAAe,EAAf;AAkBP;;;;iBAED,oBAAQ;AAAA;;AACJ,iBAAKb,GAAL,CAASc,OAAT,GAAmBC,SAAnB,CAA6B,UAACC,IAAD,EAAQ;AACrC,oBAAI,CAACC,OAAL,GAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAAX,CAAb;AACA,oBAAI,CAACK,QAAL,GAAc,MAAI,CAACJ,OAAL,CAAaK,KAA3B;AACA,oBAAI,CAACC,SAAL,GAAe,MAAI,CAACN,OAAL,CAAaO,KAA5B;AACA,oBAAI,CAACK,MAAL,GAAYC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAZ;AACA,oBAAI,CAACE,WAAL,GAAiB,MAAI,CAACZ,QAAL,CAAca,MAAd,CAAqB,UAACC,CAAD;AAAA,uBAAUA,CAAC,CAACC,KAAF,KAAU,MAAI,CAACP,MAAzB;AAAA,eAArB,CAAjB;AACA,oBAAI,CAACR,QAAL,GAAc,MAAI,CAACA,QAAL,CAAca,MAAd,CAAqB,UAACC,CAAD;AAAA,uBAAUA,CAAC,CAACC,KAAF,KAAU,MAAI,CAACP,MAAzB;AAAA,eAArB,CAAd;AACA,oBAAI,CAACgB,YAAL,GAAkB,MAAI,CAACZ,WAAL,CAAiB,CAAjB,EAAoBG,KAAtC;AACA,oBAAI,CAACU,WAAL,GAAiB,MAAI,CAACb,WAAL,CAAiB,CAAjB,EAAoBc,IAArC;AACD,aATC;AAUD,iBAAKpC,WAAL,CAAiBqC,UAAjB,GACEjC,SADF,CACY,UAACC,IAAD,EAA4D;AACrE,kBAAG,MAAI,CAACa,MAAL,IAAab,IAAI,CAACgE,MAAlB,IAA0B,MAAI,CAACnD,MAAL,IAAab,IAAI,CAACmC,IAA/C,EAAoD;AAClD,sBAAI,CAACvC,YAAL,CAAkBwC,IAAlB,CAAuBpC,IAAvB;;AACA,sBAAI,CAACJ,YAAL,CAAkByC,OAAlB;AACD;;AAED,kBAAI,MAAI,CAACxB,MAAT,EAAiB;AACfyB,0BAAU,CAAC,YAAM;AACf,wBAAI,CAACzC,YAAL,GAAoB,MAAI,CAACF,WAAL,CAAiB4C,UAAjB,EAApB;;AACA,sBAAMC,UAAU,GAAG,MAAI,CAAC3C,YAAL,CAChB4C,SADgB,CACN,UAACC,OAAD;AAAA,2BAAaA,OAAO,CAACtB,KAAR,KAAkB,MAAI,CAACP,MAApC;AAAA,mBADM,CAAnB,CAFe,CAIf;;AACD,iBALS,EAKP,GALO,CAAV;AAMD;AACF,aAfF;AAgBF;;;iBAED,kBAAM;AACJC,wBAAY,CAACiC,KAAb;AACA,iBAAK9D,MAAL,CAAY+D,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACA;;;iBACJ,mBAAM;AACJS,iBAAK,CAAC,kCAAD,CAAL;AACA,iBAAK9D,WAAL,CAAiB8F,UAAjB,CAA4B;AAAC5E,oBAAM,EAAC,KAAKA;AAAb,aAA5B;AACA,iBAAK5B,MAAL,CAAY+D,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACD;;;iBACC,kBAAM;AACJ,iBAAKhE,GAAL,CAAS0G,QAAT,CAAkB;AAAC9D,kBAAI,EAAC,KAAKZ,MAAX;AAAkB2E,sBAAQ,EAAC,KAAK9D,YAAhC;AAA6CE,kBAAI,EAAC,KAAKD;AAAvD,aAAlB,EAAuF/B,SAAvF,CAAiG,UAACC,IAAD,EAAQ;AACvG,kBAAGA,IAAI,CAAC4F,IAAL,IAAW,OAAd,EAAsB;AACpBnC,qBAAK,CAAC,uCAAD,CAAL;AACD;;AACD,kBAAGzD,IAAI,CAAC4F,IAAL,IAAW,SAAd,EAAwB;AACtBnC,qBAAK,CAAC,+BAAD,CAAL;AACA2B,sBAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF,aARD;AAUA,iBAAKtE,MAAL,GAAY,EAAZ;AACD;;;iBAED,mBAAUhB,IAAV,EAAkB;AAChBc,wBAAY,CAACsC,OAAb,CAAqB,aAArB,EAAmCpD,IAAnC;AACD;;;iBAED,2BAAkBoB,KAAlB,EAA+B;AAAA;;AAC7B,iBAAK6B,YAAL,GAAoB,KAAK5C,QAAL,CAAc6C,IAAd,CAAmB,UAAAf,IAAI;AAAA,qBAAIA,IAAI,CAACf,KAAL,KAAeA,KAAnB;AAAA,aAAvB,CAApB;AACA,iBAAK+B,OAAL,GAAe,KAAKF,YAAL,CAAkB7B,KAAlB,CAAwB,KAAKH,WAA7B,CAAf;AACA,iBAAKrB,YAAL,GAAoB,EAApB;AACA,iBAAKC,YAAL,GAAoB,KAAKF,WAAL,CAAiB4C,UAAjB,EAApB;AACA,gBAAMC,UAAU,GAAG,KAAK3C,YAAL,CAChB4C,SADgB,CACN,UAACC,OAAD;AAAA,qBAAaA,OAAO,CAACtB,KAAR,KAAkB,MAAI,CAACP,MAApC;AAAA,aADM,CAAnB;;AAGA,gBAAI2B,UAAU,GAAG,CAAC,CAAlB,EAAqB;AACnB,mBAAK5C,YAAL,GAAoB,KAAKC,YAAL,CAAkB2C,UAAlB,EAA8B2B,KAAlD;AACD;;AAED,iBAAKb,IAAL,CAAU,KAAKrC,WAAf,EAA4B,KAAKJ,MAAjC;AACD;;;iBAED,cAAK0C,QAAL,EAAuB1C,MAAvB,EAAqC;AACnC,iBAAKlB,WAAL,CAAiB6D,QAAjB,CAA0B;AAACrB,kBAAI,EAAEoB,QAAP;AAAiB1C,oBAAM,EAAEA;AAAzB,aAA1B;AACD;;;iBAED,uBAAW;AAAA;;AACT,iBAAKlB,WAAL,CAAiBkG,WAAjB,CAA6B;AAC3B1D,kBAAI,EAAE,KAAKtB,MADgB;AAE3BmD,oBAAM,EAAC,KAAKf,YAAL,CAAkB7B,KAFE;AAG3B6C,qBAAO,EAAE,KAAKH;AAHa,aAA7B;AAMA,iBAAKjE,YAAL,GAAoB,KAAKF,WAAL,CAAiB4C,UAAjB,EAApB;AACA,gBAAMC,UAAU,GAAG,KAAK3C,YAAL,CAChB4C,SADgB,CACN,UAACC,OAAD;AAAA,qBAAaA,OAAO,CAACtB,KAAR,KAAkB,MAAI,CAACP,MAApC;AAAA,aADM,CAAnB;;AAGA,gBAAI2B,UAAU,GAAG,CAAC,CAAlB,EAAqB;AACnB,mBAAK3C,YAAL,CAAkB2C,UAAlB,EAA8B2B,KAA9B,CAAoC/B,IAApC,CAAyC;AACvCD,oBAAI,EAAE,KAAKlB,WAD4B;AAEvCgD,uBAAO,EAAE,KAAKH;AAFyB,eAAzC;AAID,aALD,MAKO;AACL,kBAAMM,aAAa,GAAG;AACpBpD,sBAAM,EAAE,KAAKH,MADO;AAEpBsD,qBAAK,EAAE,CAAC;AACNhC,sBAAI,EAAE,KAAKlB,WADL;AAENgD,yBAAO,EAAE,KAAKH;AAFR,iBAAD;AAFa,eAAtB;AAQA,mBAAKjE,YAAL,CAAkBuC,IAAlB,CAAuBgC,aAAvB;AACD;;AACD,iBAAKzE,WAAL,CAAiB0E,UAAjB,CAA4B,KAAKxE,YAAjC;AACA,iBAAKiE,WAAL,GAAmB,EAAnB;AAED;;;;;;;yBAnIU0B,a,EAAa,oI,EAAA,+H,EAAA,wH,EAAA,uH;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA,iB;AAAA,e;AAAA,4rG;AAAA;AAAA;ACZ1B;;AACE;;AAA2J;;AAAkB;;AAC7K;;AACF;;AACA;;AAEI;;AAEE;;AAEE;;AACE;;AACE;;AAAoE;;AAAe;;AACnF;;AAA0J;AAAA,qBAAS,eAAT;AAAiB,aAAjB;;AAAmB;;AAAc;;AAC7L;;AAAM;;AAAI;;AAEV;;AAQF;;AACF;;AAIA;;AACE;;AACE;;AACE;;AAA6C;;AAAkB;;AAAQ;;AACvE;;AACE;;AAAQ;AAAA;AAAA;;AAAR;;AACF;;AAAyD;AAAA,qBAAS,IAAAM,MAAA,EAAT;AAAiB,aAAjB;;AAA8H;;AAAM;;AAC7L;;AAEF;;AACA;;AACE;;AAA6C;;AAAkB;;AAAQ;;AACvE;;AACE;;AACF;;AACE;;AACA;;AACA;;AACJ;;AACF;;AAAM;;AACN;;AACE;;AA6BF;;AAEF;;AAEF;;AAEF;;;;;;AAnFQ;;AAAA;;AAUsE;;AAAA;;AAIa;;AAAA;;AAkBvE;;AAAA;;AACY;;AAAA;;AAUhB;;AAAA;;AAKM;;AAAA;;;;;;;;;wEDtCXN,a,EAAa;gBALzB,uDAKyB;iBALf;AACTtG,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKe,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACyBY;;AAA0H;;AAA2B;;;;;;AASrJ;;AAAgI;;AAAsB;;;;UDxBrJ2G,c;AAMX,gCAAmB/G,GAAnB,EAA0CC,MAA1C,EAAgE+G,EAAhE,EAAgF;AAAA;;AAA7D,eAAAhH,GAAA,GAAAA,GAAA;AAAuB,eAAAC,MAAA,GAAAA,MAAA;AAAsB,eAAA+G,EAAA,GAAAA,EAAA;AALhE,eAAA7D,IAAA,GAAK;AACHf,iBAAK,EAAC,EADH;AAEH6E,oBAAQ,EAAC;AAFN,WAAL;AAMA,eAAAC,OAAA,GAAQ,KAAKF,EAAL,CAAQG,KAAR,CAAc;AACpB/E,iBAAK,EAAC,CAAC,EAAD,EAAI,CAAC,0DAAWgF,QAAZ,EAAqB,0DAAWC,OAAX,CAAmB,YAAnB,CAArB,CAAJ,CADc;AAEpBJ,oBAAQ,EAAC,CAAC,EAAD,EAAI,CAAC,0DAAWG,QAAZ,CAAJ;AAFW,WAAd,CAAR;AADmF;;;;iBAKnF,oBAAQ,CACP;;;iBAED,iBAAK;AAAA;;AACH,iBAAKvF,MAAL,GAAY,KAAKsB,IAAL,CAAUf,KAAtB;AACAN,wBAAY,CAACsC,OAAb,CAAqB,QAArB,EAA8B,KAAKvC,MAAnC;AACA,iBAAK7B,GAAL,CAAS6E,GAAT,CAAa,KAAK1B,IAAlB,EAAwBpC,SAAxB,CAAkC,UAACuG,IAAD,EAAQ;AACxC,kBAAGA,IAAI,CAACC,GAAL,IAAU,KAAb,EAAmB;AACjBzF,4BAAY,CAACsC,OAAb,CAAqB,OAArB,EAA6BkD,IAAI,CAACE,KAAlC;;AACD,sBAAI,CAACvH,MAAL,CAAY+D,QAAZ,CAAqB,CAAC,MAAD,CAArB;AACA,eAHD,MAIK,IAAGsD,IAAI,CAACC,GAAL,IAAU,SAAb,EAAuB;AAC1B9C,qBAAK,CAAC,gBAAD,CAAL;AACD,eAFI,MAGD;AACFA,qBAAK,CAAC,oDAAD,CAAL;AACD;AACF,aAXD;AAYD;;;;;;;yBA7BUsC,c,EAAc,wH,EAAA,uH,EAAA,2H;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA,iB;AAAA,e;AAAA,ykC;AAAA;AAAA;ACV3B;;AACE;;AAA2J;;AAAkB;;AAC/K;;AACA;;AAA4B;AAAA,qBAAY,IAAAU,KAAA,EAAZ;AAAmB,aAAnB;;AACxB;;AACE;;AAA4E;;AAAK;;AAAM;;AAAI;;AAE5F;;AACC;;AAAG;;AAAuB;;AAC1B;;AAAK;;AAAuB;;AAAM;;AAAI;;AACvC;;AACD;;AAAO;;AAEP;;AAEE;;AACE;;AAEE;;AACE;;AAIO;AAAA;AAAA;;AAJP;;AAKG;;AACH;;AACF;;AACA;;AACE;;AAIO;AAAA;AAAA;;AAJP;;AAKG;;AACH;;AACF;;AAEF;;AACF;;AAEF;;AAAM;;AAEN;;AACE;;AAAmF;;AAAK;;AAC1F;;AACF;;;;AA1CI;;AAAA;;AAoBa;;AAAA;;AAEqC;;AAAA;;AAOrC;;AAAA;;AAEqC;;AAAA;;AASzC;;AAAA;;;;;;;;;wEDjCFV,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACT7G,oBAAQ,EAAE,WADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKgB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEV3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACaM;;AAA6G;;AAAe;;;;;;AAK5H;;AAA+G;;AAA2B;;;;;;AAU1I;;AAAqH;;AAAgB;;;;;;AAOrI;;AAAyH;;AAAiB;;;;UDzBnIsH,a;AAYX,+BAAmBV,EAAnB,EAAyChH,GAAzC,EAA+DC,MAA/D,EAA8E;AAAA;;AAA3D,eAAA+G,EAAA,GAAAA,EAAA;AAAsB,eAAAhH,GAAA,GAAAA,GAAA;AAAsB,eAAAC,MAAA,GAAAA,MAAA;AAV/D,eAAA0H,YAAA,GAAkB,IAAlB;AAeA,eAAAxE,IAAA,GAAK;AACHJ,gBAAI,EAAC,EADF;AAEHX,iBAAK,EAAC,EAFH;AAGH6E,oBAAQ,EAAC,EAHN;AAIHW,sBAAU,EAAC,EAJR;AAKHpF,iBAAK,EAAC,KALH;AAMHE,gBAAI,EAAC;AANF,WAAL;AAQA,eAAAmF,UAAA,GAAW,KAAKb,EAAL,CAAQG,KAAR,CAAc;AACvBpE,gBAAI,EAAC,CAAC,EAAD,EAAI,CAAC,0DAAWqE,QAAZ,CAAJ,CADkB;AAEvBhF,iBAAK,EAAC,CAAC,EAAD,EAAI,CAAC,0DAAWgF,QAAZ,EAAqB,0DAAWC,OAAX,CAAmB,YAAnB,CAArB,CAAJ,CAFiB;AAGvBJ,oBAAQ,EAAC,CAAC,EAAD,EAAI,CAAC,0DAAWG,QAAZ,EAAqB,0DAAWC,OAAX,CAAmB,kDAAnB,CAArB,CAAJ,CAHc;AAIvBO,sBAAU,EAAC,CAAC,EAAD,EAAI,CAAC,0DAAWR,QAAZ,CAAJ,CAJY;AAKvBU,iBAAK,EAAC,CAAC,EAAD,EAAI,CAAC,0DAAWV,QAAZ,CAAJ;AALiB,WAAd,CAAX;AAbiF;;;;iBAPjF,sBAAaW,KAAb,EAAkB;AAChB,iBAAKJ,YAAL,GAAwBI,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAxB;AACA,gBAAMC,EAAE,GAAK,IAAIC,QAAJ,EAAb;AACAD,cAAE,CAACE,MAAH,CAAU,OAAV,EAAkB,KAAKT,YAAvB,EAAoC,KAAKA,YAAL,CAAkB5E,IAAtD;AACAjB,wBAAY,CAACsC,OAAb,CAAqB,OAArB,EAA6B8D,EAA7B;AACD;;;iBAID,oBAAQ,CACP;;;iBAiBD,kBAAM;AAAA;;AACJ,gBAAG,KAAKJ,KAAL,IAAY,IAAf,EAAoB;AAClB,kBAAG,KAAK3E,IAAL,CAAU8D,QAAV,IAAoB,KAAK9D,IAAL,CAAUyE,UAAjC,EAA4C;AAC1C,qBAAK5H,GAAL,CAASqI,IAAT,CAAc,KAAKlF,IAAnB,EAAyBpC,SAAzB,CAAmC,UAACuG,IAAD,EAAQ;AACzC,sBAAGA,IAAI,CAACC,GAAL,IAAU,SAAb,EAAuB;AACrB9C,yBAAK,CAAC,8BAAD,CAAL;;AACA,0BAAI,CAACxE,MAAL,CAAY+D,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACD;;AACD,sBAAGsD,IAAI,CAACC,GAAL,IAAU,MAAb,EAAoB;AAClB9C,yBAAK,CAAC,yCAAD,CAAL;AACD;AACF,iBARD;AASD,eAVD,MAWI;AACFA,qBAAK,CAAC,iCAAD,CAAL;AACD;AAEF,aAhBD,MAiBI;AACFA,mBAAK,CAAC,wCAAD,CAAL;AACD;AACF;;;;;;;yBArDUiD,a,EAAa,2H,EAAA,wH,EAAA,uH;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA,iB;AAAA,gB;AAAA,siD;AAAA;AAAA;ACV1B;;AACE;;AAA2J;;AAAkB;;AAC/K;;AACA;;AAA+B;AAAA,qBAAY,IAAAY,MAAA,EAAZ;AAAoB,aAApB;;AAC5B;;AACC;;AAA0D;;AAAM;;AAC/D;;AAA8D;;AAAG;;AAAoB;;AAAI;;AAA4C;;AAAK;;AAAI;;AAEhJ;;AAAM;;AACN;;AACC;;AACE;;AAAmD;;AAAI;;AACvD;;AAA8B;AAAA;AAAA;;AAA9B;;AACA;;AACJ;;AACI;;AACG;;AAAmD;;AAAY;;AAClE;;AAA+B;AAAA;AAAA;;AAA/B;;AACA;;AACA;;AAA2D;;AAAqD;;AACnH;;AACC;;AAED;;AAEC;;AACE;;AAAsD;;AAAQ;;AAC9D;;AAAkC;AAAA;AAAA;;AAAlC;;AACA;;AACF;;AACA;;AACE;;AAAsD;;AAAiB;;AACvE;;AAAoC;AAAA;AAAA;;AAApC;;AACA;;AAA4B;;AAC0B;;AACtD;;AACF;;AAEA;;AACE;;AAAoF;AAAA;AAAA;;AAApF;;AACA;;AAAoD;;AAA+B;;AACrF;;AACA;;AAA+E;;AAAM;;AACvF;;;;AAxCI;;AAAA;;AAS8B;;AAAA;;AACH;;AAAA;;AAII;;AAAA;;AACJ;;AAAA;;AASO;;AAAA;;AACP;;AAAA;;AAIS;;AAAA;;AAGT;;AAAA;;AAIyD;;AAAA;;AAG/D;;AAAA;;;;;;;;;wEDhCdZ,a,EAAa;gBALzB,uDAKyB;iBALf;AACTxH,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKe,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEV1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEE;;AAAgC;AAAA;;AAAA;;AAAA;AAAA;;AAAkL;;AAAM;;;;UDQ7MmI,iB;AAqBX,mCAAmB9C,IAAnB,EAA2CxF,MAA3C,EAAiEU,WAAjE,EAA0F;AAAA;;AAAvE,eAAA8E,IAAA,GAAAA,IAAA;AAAwB,eAAAxF,MAAA,GAAAA,MAAA;AAAsB,eAAAU,WAAA,GAAAA,WAAA;AAA4B;;;;iBAE7F,oBAAQ;AAAA;;AAEJ,iBAAK8E,IAAL,CAAU3E,OAAV,GAAoBC,SAApB,CAA8B,UAACC,IAAD,EAAQ;AACtC,qBAAI,CAACgB,MAAL,GAAYF,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAZ;AACA,qBAAI,CAACoC,OAAL,GAAarC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAb;AACA,qBAAI,CAACyG,YAAL,GAAkB1G,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAlB;AACA,qBAAI,CAACC,MAAL,GAAYF,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAZ;AACA,qBAAI,CAACd,OAAL,GAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAAX,CAAb;AACA,qBAAI,CAACS,YAAL,GAAkB,OAAI,CAACR,OAAL,CAAaS,YAA/B;AACA,qBAAI,CAACW,QAAL,GAAc,OAAI,CAACZ,YAAL,CAAkBS,MAAlB,CAAyB,UAACC,CAAD;AAAA,uBAAUA,CAAC,CAACG,YAAF,KAAiB,OAAI,CAACN,MAAhC;AAAA,eAAzB,CAAd;AACA,qBAAI,CAACO,SAAL,GAAe,OAAI,CAACF,QAAL,CAAcH,MAAd,CAAqB,UAACC,CAAD;AAAA,uBAAUA,CAAC,CAACK,KAAF,KAAU,IAApB;AAAA,eAArB,CAAf;AACA,qBAAI,CAACC,UAAL,GAAgB,OAAI,CAACJ,QAAL,CAAcH,MAAd,CAAqB,UAACC,CAAD;AAAA,uBAAUA,CAAC,CAACO,IAAF,KAAS,IAAnB;AAAA,eAArB,CAAhB;AACA,qBAAI,CAAC+F,WAAL,GAAiB,OAAI,CAAClG,SAAL,CAAeL,MAAf,CAAsB,UAACiB,IAAD;AAAA,uBAAcA,IAAI,CAACD,aAAL,KAAuB,OAAI,CAACiB,OAA1C;AAAA,eAAtB,CAAjB;AACA,qBAAI,CAACuE,QAAL,GAAc,OAAI,CAACjG,UAAL,CAAgBP,MAAhB,CAAuB,UAACiB,IAAD;AAAA,uBAAcA,IAAI,CAACD,aAAL,KAAuB,OAAI,CAACiB,OAA1C;AAAA,eAAvB,CAAd;AACA,qBAAI,CAACwE,IAAL,GAAU,OAAI,CAACtG,QAAL,CAAcH,MAAd,CAAqB,UAACiB,IAAD;AAAA,uBAAcA,IAAI,CAACD,aAAL,KAAuB,OAAI,CAACiB,OAA1C;AAAA,eAArB,CAAV;;AACA,kBAAG,OAAI,CAACwE,IAAL,CAAUC,MAAV,IAAkB,CAArB,EAAuB;AAAChE,uBAAO,CAACC,GAAR,CAAY,OAAZ;AACtB,uBAAI,CAACgE,SAAL,GAAe,KAAf;AACD;;AACD,kBAAG,OAAI,CAACF,IAAL,CAAUC,MAAV,IAAkB,CAArB,EAAwB;AAAChE,uBAAO,CAACC,GAAR,CAAY,MAAZ;AACvB,uBAAI,CAACgE,SAAL,GAAe,IAAf;AACA/G,4BAAY,CAACsC,OAAb,CAAqB,OAArB,EAA6B,MAA7B;AACD;;AAED,kBAAG,OAAI,CAACqE,WAAL,CAAiBG,MAAjB,IAAyB,CAA5B,EAA8B;AAC5B,uBAAI,CAACE,UAAL,GAAgB,KAAhB;AACAhH,4BAAY,CAACsC,OAAb,CAAqB,OAArB,EAA6B,OAA7B;AACD;;AACD,kBAAG,OAAI,CAACqE,WAAL,CAAiBG,MAAjB,IAAyB,CAA5B,EAA8B;AAC5B,uBAAI,CAACE,UAAL,GAAgB,IAAhB;AACD;;AACD,kBAAG,OAAI,CAACJ,QAAL,CAAcE,MAAd,IAAsB,CAAzB,EAA2B;AACzB,uBAAI,CAACG,SAAL,GAAe,KAAf;AACD;;AACD,kBAAG,OAAI,CAACL,QAAL,CAAcE,MAAd,IAAsB,CAAzB,EAA2B;AACzB,uBAAI,CAACG,SAAL,GAAe,IAAf;AACD;AACF,aAlCC;AAoCH;;;iBAED,kBAAM;AACJjH,wBAAY,CAACiC,KAAb;AACA,iBAAK9D,MAAL,CAAY+D,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACA;;;iBAEF,iBAAK;AACH,iBAAKgF,UAAL,GAAgBlH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAhB;;AACA,gBAAG,KAAK8G,SAAL,IAAgB,IAAnB,EAAwB;AACtB,kBAAG,KAAKG,UAAL,IAAiB,MAApB,EAA2B;AAACpE,uBAAO,CAACC,GAAR,CAAY,SAAZ;AAC1BJ,qBAAK,CAAC,gCAAD,CAAL;AACD,eAFD,MAGK,IAAG,KAAKuE,UAAL,IAAiB,OAApB,EAA4B;AAC/B,qBAAKrI,WAAL,CAAiBsI,MAAjB,CAAwB;AAACT,8BAAY,EAAC,KAAKA,YAAnB;AAAgCtF,+BAAa,EAAC,KAAKiB,OAAnD;AAA2DnC,wBAAM,EAAC,KAAKA;AAAvE,iBAAxB;AACD;AACF;;AAEA,gBAAG,KAAK6G,SAAL,IAAgB,KAAnB,EAAyB;AAACjE,qBAAO,CAACC,GAAR,CAAY,UAAZ;AACvB,mBAAKlE,WAAL,CAAiBuI,QAAjB,CAA0B;AAAChG,6BAAa,EAAC,KAAKiB,OAApB;AAA4BnC,sBAAM,EAAC,KAAKA;AAAxC,eAA1B;AACD;AACJ;;;iBAED,gBAAI;AACF,gBAAG,KAAK+G,SAAL,IAAgB,IAAnB,EAAwB;AACtB,mBAAKpI,WAAL,CAAiB+B,IAAjB,CAAsB;AAACyG,6BAAa,EAAC,KAAKhF,OAApB;AAA4BiF,wBAAQ,EAAC,KAAKL;AAA1C,eAAtB;AACD,aAFD,MAGK,IAAG,KAAKA,SAAL,IAAgB,KAAnB,EAAyB;AAC5B,mBAAKpI,WAAL,CAAiB0I,MAAjB,CAAwB;AAACF,6BAAa,EAAC,KAAKhF,OAApB;AAA4BiF,wBAAQ,EAAC,KAAKL;AAA1C,eAAxB;AACD;AACF;;;iBAED,iBAAK;AACH,gBAAG,KAAKD,UAAL,IAAiB,IAApB,EAAyB;AACvB,mBAAKnI,WAAL,CAAiB6B,KAAjB,CAAuB;AAAC2G,6BAAa,EAAC,KAAKhF,OAApB;AAA4BmF,yBAAS,EAAC,KAAKR;AAA3C,eAAvB;AACD,aAFD,MAGK,IAAG,KAAKA,UAAL,IAAiB,KAApB,EAA0B;AAC7B,mBAAKnI,WAAL,CAAiB4I,OAAjB,CAAyB;AAACJ,6BAAa,EAAC,KAAKhF,OAApB;AAA4BmF,yBAAS,EAAC,KAAKR;AAA3C,eAAzB;AACD;AACF;;;;;;;yBApGUP,iB,EAAiB,wH,EAAA,uH,EAAA,oI;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA,iB;AAAA,e;AAAA,kzC;AAAA;AAAA;ACV9B;;AACE;;AAA2J;;AAAkB;;AAC7K;;AACF;;AACA;;AACI;;AAAmJ;;AAAgB;;AACpK;;AACC;;AACI;;AAAO;AAAA,qBAAU,IAAAT,KAAA,EAAV;AAAiB,aAAjB,EAAkB,eAAlB,EAAkB;AAAA;AAAA,aAAlB;;AAAP;;AACA;;AAAmF;;AAAW;;AAChG;;AAAM;;AACN;;AACE;;AAAO;AAAA,qBAAU,IAAAtF,KAAA,EAAV;AAAiB,aAAjB,EAAkB,eAAlB,EAAkB;AAAA;AAAA,aAAlB;;AAAP;;AACA;;AAAmF;;AAAK;;AAC1F;;AAAM;;AACN;;AACE;;AAAO;AAAA,qBAAU,IAAAE,IAAA,EAAV;AAAgB,aAAhB,EAAiB,eAAjB,EAAiB;AAAA;AAAA,aAAjB;;AAAP;;AACA;;AAAmF;;AAAI;;AACzF;;AACH;;AAEA;;;;AAnBO;;AAAA;;AAG6I;;AAAA;;AAGrH;;AAAA;;AAIA;;AAAA;;AAID;;AAAA;;;;;;;;;wEDNpB6F,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTrI,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEV9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaoJ,W;AACX,6BAAoBxJ,GAApB,EAA2CC,MAA3C,EAAwD;AAAA;;AAApC,eAAAD,GAAA,GAAAA,GAAA;AAAuB,eAAAC,MAAA,GAAAA,MAAA;AAG1C;;;;iBACD,uBAAW;AACT,gBAAI,KAAKD,GAAL,CAASyJ,QAAT,EAAJ,EACA;AACE,qBAAO,IAAP;AACD,aAHD,MAII;AACF,mBAAKxJ,MAAL,CAAY+D,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACA,qBAAO,KAAP;AAED;AACF;;;;;;;yBAfUwF,W,EAAW,+G,EAAA,8G;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;wEAEDA,W,EAAW;gBAHvB,wDAGuB;iBAHZ;AACV9D,sBAAU,EAAE;AADF,W;AAGY,U;;;;;;;;;;;;;;;;;;;;;;;;ACRxB;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMgE,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAIjF,OAAO,CAACkF,KAAR,CAAcD,GAAd,CAAJ;AAAA,OADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignComponent } from './sign/sign.component';\r\nimport { ChatroomComponent } from './chatroom/chatroom.component';\r\nimport { UsereditComponent } from './useredit/useredit.component';\r\nimport { VerifyGuard } from './verify.guard';\r\n\r\nconst routes: Routes = [\r\n  {path:'',component:LoginComponent},\r\n  {path:'home',canActivate:[VerifyGuard],component:HomeComponent},\r\n  {path:'signup',component:SignComponent},\r\n  {path:'chatroom',canActivate:[VerifyGuard],component:ChatroomComponent},\r\n  {path:'edit',canActivate:[VerifyGuard],component:UsereditComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { GetService } from './get.service';\r\n\r\nimport { ChatService } from './home/chat/chat.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit{\r\n\r\n \r\n\r\n  constructor(public get:GetService, public router:Router) {}\r\n\r\n  ngOnInit(): void { }\r\n\r\n     \r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SignComponent } from './sign/sign.component';\nimport { LoginComponent } from './login/login.component';\nimport { ChatroomComponent } from './chatroom/chatroom.component';\nimport { UsereditComponent } from './useredit/useredit.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    SignComponent,\r\n    LoginComponent,\r\n    ChatroomComponent,\r\n    UsereditComponent\r\n   \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { GetService } from '../get.service';\nimport { ChatService } from '../home/chat/chat.service';\n\n@Component({\n  selector: 'app-chatroom',\n  templateUrl: './chatroom.component.html',\n  styleUrls: ['./chatroom.component.scss']\n})\n\n\n  export class ChatroomComponent implements OnInit{\n    @ViewChild('messagecontainer') mContainer:ElementRef;\n    userId:any;\n    public phoneId: string;\n    public messageText: string;\n    public messageArray: { user: string, message: string, userName:string}[] = [];\n    private storageArray = [];\n    public selectedUser;\n    public userList:any;\n    currentUser:any;\n    currentPhone:any;\n    currentName:any;\n    roomId:any;\n    allData:any;\n    roomsList:any;\n    value:false;\n    roomUserList:any;\n    roomUser:any;\n    roomAdmin:any;\n    selectedroom:any;\n    signUserList:any;\n    blockList:any;\n    blockedUser:any;\n    muteList:any;\n    mutedUsers:any;\n    mutedUser:any;\n    blockedSender:any;\n    muteUser:any;\n\n     \n    constructor(\n      private modalService: NgbModal,\n      private chatService: ChatService,\n      public get:GetService,\n      public router:Router\n    ) {\n    }\n  \n    ngOnInit(): void { \n        this.get.getdata().subscribe((data)=>{\n        this.allData=JSON.parse(JSON.stringify(data));\n        this.userList=this.allData.uList;\n        this.roomsList=this.allData.rList;\n        this.roomUserList=this.allData.chatUserList;\n        this.signUserList=this.allData.signList;\n        this.userId=localStorage.getItem('userId');\n        this.roomId=localStorage.getItem('currentRoom');\n        this.currentUser=this.userList.filter((p: any)=>p.phone===this.userId);\n        this.userList=this.userList.filter((p: any)=>p.phone!==this.userId);\n        this.roomUser=this.roomUserList.filter((p: any)=>p.selectedRoom===this.roomId);\n        this.blockList=this.roomUser.filter((p: any)=>p.block===true);\n        this.mutedUsers=this.roomUser.filter((p: any)=>p.mute===true);\n        this.roomAdmin=this.roomsList.filter((p: any)=>p.room===this.roomId);\n        this.currentPhone=this.currentUser[0].phone;\n        this.currentName=this.currentUser[0].name;\n      });\n       this.chatService.getMessage()\n        .subscribe((data: { user: string, message: string, userName:string}) => {\n          this.mutedUser=this.mutedUsers.filter((p: any)=>p.selectedPhone===data.user);\n          if(this.roomUser!=''||this.userId==data.user){\n            this.messageArray.push(data);\n            this.messageArray.reverse();\n          }\n          \n          if (this.userId) {\n            setTimeout(() => {\n              this.storageArray = this.chatService.getStorage();\n              const storeIndex = this.storageArray\n                .findIndex((storage) => storage.phone === this.userId);\n              // this.messageArray = this.storageArray[storeIndex].chats;\n            }, 500);\n          }\n        });\n    }\n  ngAfterViewInit(){\n    this.mContainer.nativeElement.scrollTop=\n    this.mContainer.nativeElement.scrollHeight;\n  }\n    logout(){\n      localStorage.clear();\n      this.router.navigate([''])\n     }\n     \n    selectUserHandler(phone: string): void {\n      this.selectedUser = this.userList.find(user => user.phone === phone);\n      this.phoneId = this.selectedUser.phone;\n      localStorage.setItem('selectedName',this.selectedUser.name);\n      localStorage.setItem('selectedPhone',this.selectedUser.phone);\n      this.selectedroom=this.roomUserList.find(user => user.selectedPhone === this.phoneId);\n      if(this.roomAdmin[0].userId==this.userId){\n        this.router.navigate(['/edit']);\n      }\n      this.join(this.currentUser, this.userId);\n    }\n  \n    join(username: string, userId: string): void {\n      this.chatService.joinRoom({user: username, userId: userId});\n    }\n\n    deleteRoom(){\n      alert('You are going to delete this chatroom');\n      this.chatService.deleteRoom({roomId:this.roomId});\n      this.router.navigate(['home'])\n    }\n\n    \n  \n    sendMessage(): void {\n      this.blockedSender=this.blockList.find(user => user.selectedPhone === this.userId);\n      if(this.blockedSender){console.log('no')\n        alert('You are blocked by admin');\n        this.messageText='';\n      }\n      else{\n        this.chatService.sendRoomMessage({\n          user: this.userId, \n          toUser:this.phoneId,\n          message: this.messageText,\n          userName:this.currentName\n        });\n        this.messageText=\"\";\n      }\n      \n  \n      this.storageArray = this.chatService.getStorage();\n      const storeIndex = this.storageArray\n        .findIndex((storage) => storage.phone === this.userId);\n  \n      if (storeIndex > -1) {\n        this.storageArray[storeIndex].chats.push({\n          user: this.currentUser,\n          message: this.messageText\n        });\n      } else {\n        const updateStorage = {\n          roomId: this.userId,\n          chats: [{\n            user: this.currentUser,\n            message: this.messageText\n          }]\n        }\n  \n        this.storageArray.push(updateStorage);\n      }\n      this.chatService.setStorage(this.storageArray);\n      this.messageText = '';\n      \n    }\n    \n  }\n  \n","<div style=\"display: flex;\">\n  <h1 style=\"font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif; font-size: 65px;color: rgb(14, 11, 11);margin-top: 2%;margin-left: 7%;\">REAL TIME CHAT APP</h1>\n  <button *ngIf=\"get.getToken()\" (click)=\"logout()\" style=\"border-radius: 5px;background-color: rgb(1, 221, 250); height: 40px; padding: 10px; margin-left: 40%;margin-top: 40px;font-weight: bold;\" type=\"button\">Logout</button>\n</div>\n<div class=\"container-fluid\">\n\n    <div class=\"row\">\n  \n      <div class=\"col-md-4\">\n  \n        <div style=\"width: 80%;\" class=\"user-list-card\">\n          <div style=\"font-family: Verdana, Geneva, Tahoma, sans-serif; background-color: rgba(6, 7, 7, 0.699);height: 50px;border-radius: 5px;padding: 5px;\">\n            <p style=\"color: rgb(248, 230, 230); font-size: 20px;padding: 5px;\">{{currentName}}</p>\n          </div><br><br>\n         \n          <div class=\"user-card\" [ngClass]=\"user?.phone === selectedUser?.phone && 'active'\" *ngFor=\"let user of userList\">\n             <div *ngIf=\"roomAdmin[0].userId==userId\" style=\"width: 100%;\">\n                <div (click)=\"selectUserHandler(user?.phone)\"  style=\"display: flex; background-color: rgb(99, 135, 252); cursor: pointer; width: 100%;border-radius: 5px;padding: 10px;\">\n                  <div class=\"selected\" [ngClass]=\"user.phone===roomUserList.phone && 'show'\"></div>\n                  <!-- <img [src]=\"user?.image\" [alt]=\"user?.name\" class=\"avatar\"/> -->\n                  <p class=\"username\" style=\"font-size: 14px;\">{{user?.name}}</p>\n                </div>\n          </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-8\">\n        <div style=\"border: 2px solid black; display: flex;background-color:  rgb(16, 180, 153);border-radius: 4px;padding: 2px;\">\n        <h2 style=\"margin-top: 10px;margin-left: 20px; color: white;font-weight: bold;\">ROOM NAME :</h2> <p style=\"font-size: 30px;margin-top: 10px; margin-left: 60px;font-family: Verdana, Geneva, Tahoma, sans-serif;color: white;\">{{roomId}}</p>\n      <button (click)=\"deleteRoom()\" style=\"border-radius: 5px; border-style: ridge;padding: 5px;font-size: 12px;font-weight: bold;background-color: rgb(142, 142, 143);color: white; height: 30px;margin-top: 20px;margin-left: 35%;\">DeleteRoom</button>  \n      </div><br>\n        \n  \n        <div class=\"chat-container\">\n          <ng-container *ngIf=\"roomUserList!=''\">\n            <div class=\"chat-header\">\n              <h6 style=\"color: white;background-color: rgb(39, 85, 211);margin-left: 25px; margin-top: 10px;border-radius: 5px; padding: 6px;\">USERS IN THIS CHAT ROOM</h6>\n              <div style=\"margin-left: 20px;\">\n                <div style=\"display: inline-flex;\" *ngFor=\"let name of roomUserList\" >\n                  <p *ngIf=\"name.selectedRoom==roomId\" style=\"font-size: 15px;color: black;margin-left: 7px;\" class=\"username\">{{name?.selectedName}},</p>\n                </div>\n              </div>\n            </div>\n            \n  \n            <div class=\"chat-body\" #messageContainer>\n              <div *ngFor=\"let item of messageArray\" [ngClass]=\"item?.user !== currentPhone && 'same-user'\" >\n              <div class=\"message-container\" >\n                <div style=\"display: flex;\">\n                  <label style=\"color: rgba(0, 0, 0, 0.431);font-size: 12px;justify-content: right;font-weight: bold;\" *ngIf=\"item.user!=userId\" >{{item?.userName}}</label>\n                  <label style=\"color: rgba(0, 0, 0, 0.452);font-size: 12px;justify-content: right;font-weight: bold;\" *ngIf=\"item.user==userId\" >You</label>\n                  <label style=\"font-size: 12px;font-style: italic;\" *ngIf=\"mutedUser!='' && item.user!=userId\">muted</label>\n                </div>\n                  <p *ngIf=\"mutedUser=='' || item.user==userId\" >{{item?.message}}</p> <br>\n                </div>\n              </div>\n              \n            </div>\n  \n            <div class=\"chat-footer\">\n  \n              <div class=\"row\">\n                <div class=\"col-md-10\">\n                  <div class=\"form-group mb-0\">\n                    <input type=\"text\"\n                           placeholder=\"Type a message\"\n                           class=\"form-control\"\n                           [(ngModel)]=\"messageText\"\n                           (keyup)=\"$event.keyCode === 13 && sendMessage()\"\n                    />\n                  </div>\n                </div>\n  \n                <div class=\"col-md-2 text-center align-self-center\">\n                  <button class=\"btn btn-primary btn-sm px-3\"\n                          (click)=\"sendMessage()\">Send\n                  </button>\n                </div>\n              </div>\n  \n            </div>\n          </ng-container>\n        </div>\n  \n      </div>\n  \n    </div>\n  \n  </div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetService {\n  server_address:string='api';\n  constructor(public http:HttpClient) { }\n  sign(data:any){\n    return this.http.post<any>(`${this.server_address}/sin`,data); \n  }\n  log(data:any){\n    return this.http.post<any>(`${this.server_address}/log`,data);\n  }\n  getdata(){\n    return this.http.get(`${this.server_address}/get`);\n  }\n  sendRoom(data:any){\n    return this.http.post<any>(`${this.server_address}/room`,data); \n  }\n\n  getToken(){\n    return !!localStorage.getItem('token');\n  }\n  \n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatService {\r\n  userId:any;\r\nserver_address:string='api';\r\n  private socket: Socket;\r\n  private url = `${this.server_address}`; // your server local path\r\n\r\n  constructor() {\r\n    this.socket = io(this.url, {transports: ['websocket', 'polling', 'flashsocket']});\r\n  }\r\n\r\n  joinRoom(data): void {\r\n    this.socket.emit('join', data);\r\n  }\r\n\r\n  sendMessage(data): void {\r\n    this.socket.emit('message', data);\r\n  }\r\n  sendRoomMessage(data): void {\r\n    this.socket.emit('room message', data);\r\n  }\r\n  select(data):void{\r\n    this.socket.emit('selection', data);\r\n  }\r\n  deselect(data):void{\r\n    this.socket.emit('deselection', data);\r\n  }\r\n  block(data):void{ \r\n    this.socket.emit('block',data);\r\n  }\r\n  unblock(data){\r\n    this.socket.emit('unblock',data);\r\n  }\r\n  mute(data){\r\n    this.socket.emit('mute',data);\r\n  }\r\n  unmute(data){console.log(data)\r\n    this.socket.emit('unmute',data);\r\n  }\r\n  deleteUser(data){\r\n    this.socket.emit('deleteUser',data);\r\n  }\r\n  deleteRoom(data){\r\n    this.socket.emit('deleteRoom',data);\r\n  }\r\n  \r\n \r\n  getMessage(): Observable<any> {\r\n    this.userId=localStorage.getItem('userId');\r\n    return new Observable<{user: string, message: string, toUser:string, mute:boolean}>(observer => {\r\n      this.socket.on('new message', (data) => {\r\n        observer.next(data); \r\n      });\r\n      this.socket.on('new room message', (data) => {\r\n        observer.next(data); \r\n      });\r\n      this.socket.on('already', (data) => {\r\n        observer.next(data);\r\n        if(data.blockedno==this.userId){\r\n          window.location.reload();\r\n        }\r\n      });\r\n\r\n      return () => {\r\n        this.socket.disconnect();\r\n      }\r\n    });\r\n  }\r\n\r\n  getStorage() {\r\n    const storage: string = localStorage.getItem('chats');\r\n    return storage ? JSON.parse(storage) : [];\r\n  }\r\n\r\n  setStorage(data) {\r\n    localStorage.setItem('chats', JSON.stringify(data));\r\n  }\r\n\r\n}\r\n\r\n","import { Component, OnInit} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { GetService } from '../get.service';\nimport { ChatService } from './chat/chat.service';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit{\n\n  userId:any;\n  public phoneId: string;\n  public messageText: string;\n  public messageArray: { user: string, message: string }[] = [];\n  private storageArray = [];\n  public selectedUser;\n  public userList:any;\n  currentUser:any;\n  currentPhone:any;\n  currentName:any;\n  roomId:any;\n  allData:any;\n  roomsList:any;\n \n  \n\n  constructor(\n    private modalService: NgbModal,\n    private chatService: ChatService,\n    public get:GetService,\n    public router:Router\n  ) {\n  }\n\n  ngOnInit(): void {\n      this.get.getdata().subscribe((data)=>{\n      this.allData=JSON.parse(JSON.stringify(data));\n      this.userList=this.allData.uList;\n      this.roomsList=this.allData.rList;\n      this.userId=localStorage.getItem('userId');\n      this.currentUser=this.userList.filter((p: any)=>p.phone===this.userId);\n      this.userList=this.userList.filter((p: any)=>p.phone!==this.userId);\n      this.currentPhone=this.currentUser[0].phone;\n      this.currentName=this.currentUser[0].name;\n    });\n     this.chatService.getMessage()\n      .subscribe((data: { user: string, message: string, toUser:string }) => {\n        if(this.userId==data.toUser||this.userId==data.user){\n          this.messageArray.push(data);\n          this.messageArray.reverse();\n        }\n        \n        if (this.userId) {\n          setTimeout(() => {\n            this.storageArray = this.chatService.getStorage();\n            const storeIndex = this.storageArray\n              .findIndex((storage) => storage.phone === this.userId);\n            // this.messageArray = this.storageArray[storeIndex].chats;\n          }, 500);\n        }\n      });\n  }\n\n  logout(){\n    localStorage.clear();\n    this.router.navigate([''])\n   }\ndelete(){\n  alert('You going to delete your account');\n  this.chatService.deleteUser({userId:this.userId});\n  this.router.navigate(['']);\n}\n  create(){\n    this.get.sendRoom({room:this.roomId,senderId:this.currentPhone,name:this.currentName}).subscribe((data)=>{\n      if(data.msg1=='exist'){\n        alert('Chatroom with this name already exist');\n      }\n      if(data.msg1==\"created\"){\n        alert('Chatroom created successfully');\n        window.location.reload();\n      }\n    });\n    \n    this.roomId=\"\";\n  }\n  \n  roomStore(data:any){\n    localStorage.setItem('currentRoom',data);\n  }\n\n  selectUserHandler(phone: string): void {\n    this.selectedUser = this.userList.find(user => user.phone === phone);\n    this.phoneId = this.selectedUser.phone[this.currentUser];\n    this.messageArray = [];\n    this.storageArray = this.chatService.getStorage();\n    const storeIndex = this.storageArray\n      .findIndex((storage) => storage.phone === this.userId);\n\n    if (storeIndex > -1) {\n      this.messageArray = this.storageArray[storeIndex].chats;\n    }\n\n    this.join(this.currentUser, this.userId);\n  }\n\n  join(username: string, userId: string): void {\n    this.chatService.joinRoom({user: username, userId: userId});\n  }\n\n  sendMessage(): void {\n    this.chatService.sendMessage({\n      user: this.userId, \n      toUser:this.selectedUser.phone,\n      message: this.messageText\n    });\n\n    this.storageArray = this.chatService.getStorage();\n    const storeIndex = this.storageArray\n      .findIndex((storage) => storage.phone === this.userId);\n\n    if (storeIndex > -1) {\n      this.storageArray[storeIndex].chats.push({\n        user: this.currentUser,\n        message: this.messageText\n      });\n    } else {\n      const updateStorage = {\n        roomId: this.userId,\n        chats: [{\n          user: this.currentUser,\n          message: this.messageText\n        }]\n      }\n\n      this.storageArray.push(updateStorage);\n    }\n    this.chatService.setStorage(this.storageArray);\n    this.messageText = '';\n    \n  }\n  \n}\n","<div style=\"display: flex;\">\n  <h1 style=\"font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif; font-size: 65px;color: rgb(14, 11, 11);margin-top: 2%;margin-left: 7%;\">REAL TIME CHAT APP</h1>\n  <button *ngIf=\"get.getToken()\" (click)=\"logout()\" style=\"border-radius: 5px;background-color: rgb(1, 221, 250); height: 40px; padding: 10px; margin-left: 40%;margin-top: 40px;font-weight: bold;\" type=\"button\">Logout</button>\n</div>\n<div class=\"container-fluid\">\n\n    <div class=\"row\">\n      <!-- list card start -->\n      <div class=\"col-md-4\">\n  \n        <div style=\"width: 80%;\" class=\"user-list-card\">\n          <div style=\"font-family: Verdana, Geneva, Tahoma, sans-serif; background-color: rgba(6, 7, 7, 0.699);height: auto;border-radius: 5px;padding: 5px;\">\n            <p style=\"color: rgb(248, 230, 230); font-size: 20px;padding: 5px;\">{{currentName}}</p>\n            <button style=\"border-radius: 5px; border-style: ridge;padding: 3px;font-size: 12px;font-weight: bold;background-color: rgb(142, 142, 143);color: white;\" (click)=\"delete()\">Delete Account</button>\n          </div><br><br>\n         \n          <div class=\"user-card\" [ngClass]=\"user?.phone === selectedUser?.phone && 'active'\" *ngFor=\"let user of userList\">\n             <div style=\"width: 100%;\">\n                <div (click)=\"selectUserHandler(user?.phone)\" style=\"display: flex; cursor: pointer; background-color: rgb(99, 135, 252); width: 100%;border-radius: 5px;padding: 10px;\">\n                  <!-- <img [src]=\"user?.image\" [alt]=\"user?.name\" class=\"avatar\"/> -->\n                  <p class=\"username\" style=\"font-size: 14px;\">{{user?.name}}</p>\n                </div>\n          </div>\n          </div>\n        </div>\n      </div>\n      <!-- list card end -->\n\n      <!-- chat body start -->\n      <div class=\"col-md-8\">\n        <div style=\"border: 2px solid black; display: flex;background-color:rgb(16, 180, 153); border-radius: 4px;padding: 2px;\">\n          <div style=\"padding: 5px;border-radius: 5px;\">\n            <label style=\"font-size: 16px;color: white;\">create a chatroom </label><br>\n            <form #roomForm=\"ngForm\" style=\"display: flex;\">\n              <input  [(ngModel)]=\"roomId\" style=\"border-radius: 5px;\"  name=\"room\" required type=\"text\" placeholder=\"Chatroom name\">\n            <button type=\"submit\" [disabled]=\"roomForm.form.invalid\" (click)=\"create()\" style=\"margin-left: 5%;border-radius: 5px;color: white; background-color: rgb(25, 127, 158);padding: 4px;\">CREATE</button>\n            </form>\n            \n          </div>\n          <div style=\"margin-left: 35%;margin-top: 5px;\" class=\"dropdown\">\n            <label style=\"font-size: 16px;color: white;\">choose a chatroom </label><br>\n            <button style=\"background-color: rgba(0, 0, 0, 0.74); width: 158px;\" class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              Chatrooms\n            </button>\n              <ul style=\"border-radius:4px;background-color: rgba(0, 0, 0, 0.459);\" class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              <li *ngFor=\"let rooms of roomsList\" style=\"border: 1px solid rgba(255, 255, 255, 0.582);background-color: rgba(163, 237, 255, 0.705);\"><a (click)=\"roomStore(rooms.room)\" style=\"color: rgb(12, 11, 11); font-weight: bold;\" class=\"dropdown-item\" routerLink=\"/chatroom\">{{rooms?.room}}</a></li>\n              </ul>\n          </div>\n        </div><br>\n        <div class=\"chat-container\">\n          <ng-container *ngIf=\"selectedUser\">\n            <div class=\"chat-header\">\n              <!-- <img [src]=\"selectedUser?.image\" [alt]=\"selectedUser?.name\" class=\"avatar\"/> -->\n              <p style=\"font-size: 18px;\" class=\"username\">{{selectedUser?.name}}</p>\n            </div>\n  \n            <div class=\"chat-body\">\n              <div *ngFor=\"let item of messageArray\" [ngClass]=\"item?.user !== currentPhone && 'same-user'\">\n                <p class=\"message-container\">{{item?.message}}</p> \n              </div>\n            </div>\n  \n            <div class=\"chat-footer\">\n              <div class=\"row\">\n                <div class=\"col-md-10\">\n                  <div class=\"form-group mb-0\">\n                    <input type=\"text\" placeholder=\"Type a message\" class=\"form-control\" [(ngModel)]=\"messageText\" (keyup)=\"$event.keyCode === 13 && sendMessage()\"/>\n                  </div>\n                </div>\n  \n                <div class=\"col-md-2 text-center align-self-center\">\n                  <button class=\"btn btn-primary btn-sm px-3\"\n                          (click)=\"sendMessage()\">Send\n                  </button>\n                </div>\n              </div>\n  \n            </div>\n          </ng-container>\n        </div>\n  \n      </div>\n  \n    </div>\n  \n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GetService } from '../get.service';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  user={\n    phone:'',\n    password:''\n}\n  userId:any;\n  constructor(public get:GetService, public router:Router, public fb:FormBuilder) { }\n  logForm=this.fb.group({\n    phone:[\"\",[Validators.required,Validators.pattern('[0-9 ]{10}')]],\n    password:[\"\",[Validators.required]]\n})\n  ngOnInit(): void {\n  }\n  \n  login(): void {\n    this.userId=this.user.phone\n    localStorage.setItem('userId',this.userId);\n    this.get.log(this.user).subscribe((item)=>{\n      if(item.msg=='yes'){\n        localStorage.setItem('token',item.token)\n       this.router.navigate(['home']);\n      }\n      else if(item.msg=='invalid'){\n        alert('wrong password')\n      }\n      else{\n        alert('No user found with this phone number sign up first')\n      }\n    });\n  }\n}\n","<div style=\"display: flex;\">\n  <h1 style=\"font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif; font-size: 65px;color: rgb(14, 11, 11);margin-top: 2%;margin-left: 7%;\">REAL TIME CHAT APP</h1>\n</div>\n<form [formGroup]=\"logForm\" (ngSubmit)=\"login()\" style=\"width: 35%; margin-top: 8%; margin-left: 31%; border: 2px solid blue;background-color: rgba(255, 255, 255, 0.575);padding: 20px;\" >\n    <div style=\"display: flex;\">\n      <h4 style=\"font-family: 'Times New Roman', Times, serif;font-weight: bold;\">Login</h4> <br><br>\n     \n     <div style=\"margin-left: 35%;display: flex;\">\n      <p>Not have an account?  .</p> \n      <h6 ><a routerLink=\"signup\">SignUp</a></h6>   \n     </div> \n    </div> <br>\n   \n    <div >\n  \n      <div class=\"row\">\n        <div class=\"col-md-12\">\n  \n          <div class=\"form-group\">\n            <input type=\"text\" name=\"phone\"\n                   formControlName=\"phone\"\n                   placeholder=\"Enter your phone number\"\n                   class=\"form-control\"\n                   [(ngModel)]=\"user.phone\"\n            /> <br>\n            <label style=\"color: red; font-size: 13px;\" *ngIf=\"logForm.controls['phone'].invalid&&logForm.controls['phone'].touched\" >Enter a valid mobile number</label>\n          </div>\n          <div class=\"form-group\">\n            <input type=\"password\" name=\"password\"\n                   formControlName=\"password\"\n                   placeholder=\"Enter your password\"\n                   class=\"form-control\"\n                   [(ngModel)]=\"user.password\"\n            /> <br>\n            <label style=\"color: red; font-size: 13px;\" *ngIf=\"logForm.controls['password'].invalid&&logForm.controls['password'].touched\" >Enter correct password</label>\n          </div>\n  \n        </div>\n      </div>\n  \n    </div><br>\n  \n    <div class=\"m-footer\">\n      <button  [disabled]=\"logForm.invalid\" class=\"btn btn-sm btn-primary\" type=\"submit\">Login</button>\n    </div>\n  </form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { GetService } from '../get.service';\n\n@Component({\n  selector: 'app-sign',\n  templateUrl: './sign.component.html',\n  styleUrls: ['./sign.component.scss']\n})\nexport class SignComponent implements OnInit {\n\n  selectedFile:File=null;\n  \n\n  onFileSelect(event){\n    this.selectedFile=<File>event.target.files[0]; \n    const fd:any=new FormData();\n    fd.append('image',this.selectedFile,this.selectedFile.name);\n    localStorage.setItem('image',fd)\n  }\n  \n  constructor(public fb:FormBuilder,public get:GetService,public router:Router) { }\n\n  ngOnInit(): void {\n  }\n  check:boolean;\n  user={\n    name:'',\n    phone:'',\n    password:'',\n    repassword:'',\n    block:false,\n    mute:false\n  }\n  signupForm=this.fb.group({\n    name:[\"\",[Validators.required]],\n    phone:[\"\",[Validators.required,Validators.pattern('[0-9 ]{10}')]],\n    password:['',[Validators.required,Validators.pattern('(?=.*[a-z])(?=.*[0-9])(?=.*[A-Z])[a-zA-Z0-9]{8,}')]],\n    repassword:['',[Validators.required]],\n    check:['',[Validators.required]]\n  });\n  verify(){\n    if(this.check==true){\n      if(this.user.password==this.user.repassword){\n        this.get.sign(this.user).subscribe((item)=>{\n          if(item.msg=='success'){\n            alert('Account created successfully');\n            this.router.navigate(['']);\n          }\n          if(item.msg=='fail'){\n            alert('This phone number is already registered')\n          }\n        });\n      }\n      else{\n        alert('Re-enter the password correctly')\n      }\n     \n    }\n    else{\n      alert('Please accept the terms and conditions')\n    }\n  }\n\n}\n","<div style=\"display: flex;\">\n  <h1 style=\"font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif; font-size: 65px;color: rgb(14, 11, 11);margin-top: 2%;margin-left: 7%;\">REAL TIME CHAT APP</h1>\n</div>\n<form [formGroup]=\"signupForm\" (ngSubmit)=\"verify()\" style=\"width: 52%; border: 2px solid blue; background-color: #ece8e898; margin-top:6%; margin-left: 22%;padding: 20px;\">\n   <div style=\"display: flex;\">\n    <h1 style=\"font-family: 'Times New Roman', Times, serif;\">SignUp</h1>\n     <div style=\"margin-left: 45%; display: flex;margin-top: 8px;\"><p>Have an account?   .</p><a style=\"font-weight: bold;\" routerLink=\"\">Login</a></div>\n   \n   </div><br>\n   <div style=\"display: flex;\">\n    <div style=\"width: 80%;\" class=\"mb-3\">\n      <label for=\"exampleInputEmail1\" class=\"form-label\">Name</label>\n      <input formControlName=\"name\" [(ngModel)]=\"user.name\" name=\"nam\" type=\"text\" class=\"form-control\">\n      <label style=\"color: red;\" *ngIf=\"signupForm.controls['name'].invalid&&signupForm.controls['name'].touched\" >Enter your name</label>\n  <br>\n      <div>\n         <label for=\"exampleInputEmail1\" class=\"form-label\">Phone Number</label>\n      <input formControlName=\"phone\" [(ngModel)]=\"user.phone\" name=\"phon\" type=\"text\" class=\"form-control\">\n      <label style=\"color: red;\" *ngIf=\"signupForm.controls['phone'].invalid&&signupForm.controls['phone'].touched\" >Enter a valid mobile number</label>\n      <div id=\"emailHelp\" class=\"form-text\" style=\"color: blue;\">We'll never share your phone number with anyone else.</div>\n   </div>\n    </div>\n    <!-- <div style=\"margin-left: 100px;width: 200px;margin-top: 25px;\"><img src=\"../../assets/images/userlogo.png\" style=\"margin-left: 10px;\" width=\"70px\" height=\"70px\" alt=\"\"> <br><br><input  type=\"file\" (change)=\"onFileSelect($event)\"></div>  -->\n   </div>\n    \n    <div class=\"mb-3\">\n      <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n      <input formControlName=\"password\" [(ngModel)]=\"user.password\" name=\"passwor\" type=\"password\" class=\"form-control\">\n      <label style=\"color: red;\" *ngIf=\"signupForm.controls['password'].invalid&&signupForm.controls['password'].touched\" >Enter a password</label>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"exampleInputPassword1\" class=\"form-label\">Re-enter Password</label>\n      <input formControlName=\"repassword\" [(ngModel)]=\"user.repassword\" name=\"repassword\" type=\"password\" class=\"form-control\">\n      <label style=\"color: blue;\">Password must contain 8 charecters\n        (atleast one number one uppercase and one lowercase)</label> \n      <label style=\"color: red;\" *ngIf=\"signupForm.controls['repassword'].invalid&&signupForm.controls['repassword'].touched\" >Re-enter password</label>\n    </div>\n    \n    <div class=\"mb-3 form-check\">\n      <input type=\"checkbox\" class=\"form-check-input\" id=\"Check\"  formControlName=\"check\" [(ngModel)]=\"check\" name=\"check\">\n      <label class=\"form-check-label\" for=\"exampleCheck1\">Agree with Terms and conditions</label>\n    </div>\n    <button type=\"submit\"  [disabled]=\"signupForm.invalid\" class=\"btn btn-primary\">Submit</button>\n  </form>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GetService } from '../get.service';\nimport { ChatService } from '../home/chat/chat.service';\n\n@Component({\n  selector: 'app-useredit',\n  templateUrl: './useredit.component.html',\n  styleUrls: ['./useredit.component.scss']\n})\nexport class UsereditComponent implements OnInit {\n\n  selectedName:any;\n  phoneId:any;\n  roomId:any;\n  checkdata:boolean;\n  blockvalue:boolean;\n  mutevalue:boolean;\n  added:any;\n  blocked:any;\n  muted:any;\n  allData:any;\n  roomUserList:any;\n  roomUser:any;\n  blockList:any;\n  mutedUsers:any;\n  blockedUser:any;\n  muteUser:any;\n  Room:any;\n  checkvalue:any;\n  \n  constructor(public post:GetService, public router:Router, public chatService:ChatService) { }\n\n  ngOnInit(): void {\n\n      this.post.getdata().subscribe((data)=>{\n      this.roomId=localStorage.getItem('currentRoom');\n      this.phoneId=localStorage.getItem('selectedPhone')\n      this.selectedName=localStorage.getItem('selectedName');\n      this.roomId=localStorage.getItem('currentRoom');\n      this.allData=JSON.parse(JSON.stringify(data));\n      this.roomUserList=this.allData.chatUserList;\n      this.roomUser=this.roomUserList.filter((p: any)=>p.selectedRoom===this.roomId);\n      this.blockList=this.roomUser.filter((p: any)=>p.block===true);\n      this.mutedUsers=this.roomUser.filter((p: any)=>p.mute===true);\n      this.blockedUser=this.blockList.filter((user:any) => user.selectedPhone === this.phoneId);\n      this.muteUser=this.mutedUsers.filter((user:any) => user.selectedPhone === this.phoneId);\n      this.Room=this.roomUser.filter((user:any) => user.selectedPhone === this.phoneId);\n      if(this.Room.length==0){console.log('emtty');\n        this.checkdata=false;\n      }\n      if(this.Room.length!=0) {console.log('full')\n        this.checkdata=true;\n        localStorage.setItem('check','true');\n      }\n       \n      if(this.blockedUser.length==0){\n        this.blockvalue=false;\n        localStorage.setItem('check','false');\n      }\n      if(this.blockedUser.length!=0){\n        this.blockvalue=true;\n      }\n      if(this.muteUser.length==0){\n        this.mutevalue=false;\n      }\n      if(this.muteUser.length!=0){\n        this.mutevalue=true;\n      }\n    });\n\n  }\n\n  logout(){\n    localStorage.clear();\n    this.router.navigate([''])\n   }\n\n  check(){\n    this.checkvalue=localStorage.getItem('check');\n    if(this.checkdata==true){\n      if(this.checkvalue=='true'){console.log('already')\n        alert('This user already in this room')\n      }\n      else if(this.checkvalue=='false'){\n        this.chatService.select({selectedName:this.selectedName,selectedPhone:this.phoneId,roomId:this.roomId});\n      }\n    }\n    \n     if(this.checkdata==false){console.log('deleting')\n        this.chatService.deselect({selectedPhone:this.phoneId,roomId:this.roomId})\n      }\n  }\n\n  mute(){\n    if(this.mutevalue==true){\n      this.chatService.mute({selectedphone:this.phoneId,mutedata:this.mutevalue})\n    }\n    else if(this.mutevalue==false){\n      this.chatService.unmute({selectedphone:this.phoneId,mutedata:this.mutevalue})\n    }\n  }\n\n  block(){\n    if(this.blockvalue==true){\n      this.chatService.block({selectedphone:this.phoneId,blockdata:this.blockvalue});\n    }\n    else if(this.blockvalue==false){\n      this.chatService.unblock({selectedphone:this.phoneId,blockdata:this.blockvalue});\n    }\n  }\n    \n}\n","<div style=\"display: flex;\">\n  <h1 style=\"font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif; font-size: 65px;color: rgb(14, 11, 11);margin-top: 2%;margin-left: 7%;\">REAL TIME CHAT APP</h1>\n  <button *ngIf=\"post.getToken()\" (click)=\"logout()\" style=\"border-radius: 5px;background-color: rgb(1, 221, 250); height: 40px; padding: 10px; margin-left: 40%;margin-top: 40px;font-weight: bold;\" type=\"button\">Logout</button>\n</div>\n<div style=\"float: inline-end;margin-left: 40px;\">\n    <h2 style=\"font-family: Verdana, Geneva, Tahoma, sans-serif; font-size: 40px; color: white; background-color: rgba(0, 0, 0, 0.623); padding: 5px;\">{{selectedName}}</h2>\n   <div style=\"margin-left: 6%; margin-top: 4%;\">\n    <div class=\"form-check form-switch\">\n        <input (change)=\"check()\" [(ngModel)]=\"checkdata\" class=\"form-check-input\" type=\"checkbox\"  role=\"switch\" id=\"add\">\n        <label style=\"color: white;\" class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Add to room</label>\n      </div><br>\n      <div class=\"form-check form-switch\">\n        <input (change)=\"block()\" [(ngModel)]=\"blockvalue\" class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"Block\">\n        <label style=\"color: white;\" class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Block</label>\n      </div><br>\n      <div class=\"form-check form-switch\">\n        <input (change)=\"mute()\" [(ngModel)]=\"mutevalue\" class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"Mute\">\n        <label style=\"color: white;\" class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Mute</label>\n      </div>\n   </div>\n    \n   </div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { GetService } from './get.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VerifyGuard implements CanActivate {\n  constructor(private get:GetService,private router:Router)\n  {\n\n  }\n  canActivate():boolean{\n    if (this.get.getToken())\n    { \n      return true\n    }\n    else{\n      this.router.navigate(['']);\n      return false\n\n    }\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}